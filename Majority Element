#问题描述
Given an array of size n, find the majority element. The majority element is the element that appears more than ⌊ n/2 ⌋ times.

You may assume that the array is non-empty and the majority element always exist in the array.

Example 1:

Input: [3,2,3]
Output: 3
Example 2:

Input: [2,2,1,1,1,2,2]
Output: 2

class Solution(object):
    def majorityElement(self, nums):
        """
        :type nums: List[int]
        :rtype: int
        """
        if len(nums)==1:
            return nums[0]
        '''只要count>=n/2+1就能输出结果，怎么计算列表里面的重复元素的次数，用字典？'''
        res = {}
        for i in range(len(nums)):
            if nums[i] not in res:
                res[nums[i]]=1
            else:
                res[nums[i]]+=1
                if res[nums[i]]>=len(nums)/2+1:
                    return nums[i]
            
